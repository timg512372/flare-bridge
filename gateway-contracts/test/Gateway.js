const {
  time,
  loadFixture,
} = require("@nomicfoundation/hardhat-toolbox/network-helpers");
const { anyValue } = require("@nomicfoundation/hardhat-chai-matchers/withArgs");
const { expect } = require("chai");

describe("Gateway", function () {
  // We define a fixture to reuse the same setup in every test.
  // We use loadFixture to run this setup once, snapshot that state,
  // and reset Hardhat Network to that snapshot in every test.
  async function deployGatewayFixture() {
    // Contracts are deployed using the first signer/account by default
    const [owner, otherAccount] = await ethers.getSigners();

    const Token = await ethers.getContractFactory("ERC20Bridge");
    const token = await Token.deploy(100000000);

    const RelayGateway = await ethers.getContractFactory("RelayGateway");
    const relayGateway = await RelayGateway.deploy(otherAccount.address, true);

    await relayGateway.addTokenPair(
      token.target,
      "0x5187763e09a672eda81F27e622129Ac28393ca53"
    );

    const Gateway = await ethers.getContractFactory("Gateway");
    const gateway = await Gateway.deploy(relayGateway.target, token.target);
    await gateway.setRelay(otherAccount.address);
    await gateway.setBridgedCoinContract(
      "0x5187763e09a672eda81F27e622129Ac28393ca53"
    );
    await token.grantMinter(gateway.target);

    return { token, relayGateway, gateway, owner, otherAccount };
  }

  describe("Offboarding tests", function () {
    it("Should transfer", async function () {
      const { token, gateway, owner, otherAccount } = await loadFixture(
        deployGatewayFixture
      );

      await token.approve(gateway.target, 100);
      console.log("approved");
      await gateway.sendToken(10);
    });
  });

  describe("Onboarding tests", function () {
    it("Should accept test ", async function () {
      const { token, relayGateway, gateway, owner, otherAccount } =
        await loadFixture(deployGatewayFixture);

      calldata =
        "0xc56156b400000000000000000000000020e43cadc9961edfc61170eeef66d571c5993dfc00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000037bd88161fc04f315a7e7c82f1bf93afa13f90b83c6ad55d031602fc4972ae93b571461cf2579bebce75d4b8fde14b11f96c84bec30ac6496ddc3d336c47f0f9ed794c67034e802db630c3f15c6302080a5e6ea8e4a1b9fa089ba0f92c633750d45564d5472616e73616374696f6e000000000000000000000000000000000000746573744554480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c89dc0000000000000000000000000000000000000000000000000000000065eceb8800000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001808dd88f83536dd2bb5b92addd69bd514c6cd18ba1bc7b8be1abed9359fdd59d3800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005332030000000000000000000000000000000000000000000000000000000065eceb8800000000000000000000000020e43cadc9961edfc61170eeef66d571c5993dfc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a387afa74f74ab1c29f32d17655ea17621abc5dc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000024437e95f10000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000370000000000000000000000005187763e09a672eda81f27e622129ac28393ca5300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef00000000000000000000000020e43cadc9961edfc61170eeef66d571c5993dfc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000380000000000000000000000005187763e09a672eda81f27e622129ac28393ca5300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000a387afa74f74ab1c29f32d17655ea17621abc5dc00000000000000000000000020e43cadc9961edfc61170eeef66d571c5993dfc0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000390000000000000000000000002cd3cbcc13e5b165b6b43708788b4477778bc17100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014599a14afb01d51b75540a961262ad1157de6ef44f1780ef686af91fef984be70000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000a387afa74f74ab1c29f32d17655ea17621abc5dc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000005187763e09a672eda81f27e622129ac28393ca530000000000000000000000008c49e01e86d9ef98ea963be48b1e41297e06f817000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000442a7e581800000000000000000000000020e43cadc9961edfc61170eeef66d571c5993dfc000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";

      await relayGateway.connect(otherAccount).executeRelay(
        {
          uid: 27,
          amount: 0,
          relayInitiator: "0xa387afA74F74AB1c29F32D17655eA17621ABC5Dc", // sepolia gateway
          relayTarget: gateway.target, // colston gateway
          additionalCalldata: calldata,
          sourceToken: "0x0000000000000000000000000000000000000000",
          targetToken: "0x0000000000000000000000000000000000000000",
          executionResult: 1,
          relayDataHash:
            "0x62c8a6fcd17a2b8e1b18d2e98f0c9fb0aa72719107a1a3bc07b9e1eb18c394ce",
        },
        { gasLimit: 10000000 }
      );
    });
  });
});
